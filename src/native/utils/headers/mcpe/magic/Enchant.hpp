#ifndef _ENCHANT_H
#define _ENCHANT_H

//This header template file is generated by Disassembler.

class Enchant {
public:
    //Fields
    char filler_Enchant[UNKNOW_SIZE];
public:
    //Virtual Tables
	virtual ~Enchant();
	virtual ~Enchant();
	virtual void isCompatibleWith(Enchant::Type) const;
	virtual void getMinCost(int) const;
	virtual void getMaxCost(int) const;
	virtual void getMinLevel() const;
	virtual void getMaxLevel() const;
	virtual void getDamageProtection(int, ActorDamageSource const&) const;
	virtual void getDamageBonus(int, Actor const&) const;
	virtual void doPostAttack(Actor&, Actor&, int) const;
	virtual void doPostHurt(ItemInstance&, Actor&, Actor&, int) const;
	virtual void isMeleeDamageEnchant() const;
	virtual void isProtectionEnchant() const;
	virtual void isTreasureOnly() const;
	virtual void isDiscoverable() const;
public:
    //Methods
    Enchant(Enchant::Type, Enchant::Frequency, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, int, int);
    Enchant(Enchant::Type, Enchant::Frequency, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, int, int, bool);
    void canSecondaryEnchant(int) const;
    void canPrimaryEnchant(int) const;
    void canEnchant(int, bool) const;
    void canSecondaryEnchant(ItemInstance const&) const;
    void getDescription() const;
    void setDisabled();
    void getDescriptionId() const;
    void initEnchants();
    void isAvailable() const;
    void canEnchant(ItemInstance const&, bool) const;
    void getFrequency() const;
    void canPrimaryEnchant(ItemInstance const&) const;
    void isDisabled() const;
    void getStringId() const;
    void isLootable() const;
    void shutdownEnchants();
public:
    //Objects
    static Enchant * mEnchants;
};//Enchant

#endif // _ENCHANT_H
